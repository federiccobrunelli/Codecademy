//From CodeCademy exercises using datamuse word suggestion API

// Information to reach API
const url = 'https://api.datamuse.com/words';
const queryParams = '?sl=';

// Selects page elements
const inputField = document.querySelector('#input');
const submit = document.querySelector('#submit');
const responseField = document.querySelector('#responseField');

// AJAX function
const getSuggestions = () => {
  const wordQuery = inputField.value;
  const endpoint = `${url}${queryParams}${wordQuery}`;
  
  fetch(endpoint, {cache: 'no-cache'}).then(response => {
    if (response.ok) {
      return response.json();
    }
    throw new Error('Request failed!');
  }, networkError => {
    console.log(networkError.message)
  }).then( jsonResponse => {
    renderResponse(jsonResponse)
  })
}

// Clears previous results and display results to webpage
const displaySuggestions = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild);
  }
  getSuggestions();
};

submit.addEventListener('click', displaySuggestions);


________________________________________________________________

// fetch GET

fetch("http://api-to-call.com/endpoint").then(response => {

  if (response.ok) {
  
  return response.json();
  }
  
  throw new Error("Request Failed!");
  }, networkError => console.log(networkError.message)
  ).then(jsonResponse => {
      
      //Code to execute with jsonResponse
      
      });
      
________________________________________________________________

//fetch POST


fetch("https://api-to-call.com/endpoint", {

  method: "POST",
  body: JSON.stringify({id: '200'})

}).then(response => {

  if (response.ok) {
    return response.json();

  } throw new Error("Request failed!");

}, networkError => console.log(networkError.message)

).then(jsonResponse => {

    // Code to execute with jsonResponse

});

________________________________________________________________

//ASYNC .. AWAIT - GET


const getSuggestions = async () => {
  const wordQuery = inputField.value;
  const endpoint = `${url}${queryParams}${wordQuery}`;
  try {
    const response = await fetch(endpoint, {cache: "no-cache"});
    if (response.ok) {
      const jsonResponse = await response.json();
      renderResponse(jsonResponse)
    }

  } catch(error) {
    console.log(error)
  }
}

________________________________________________________________

//ASYNC .. AWAIT - POST

const getData = async () => {
  try {
    const response = await fetch('https://api-to-call.com/endpoint', {
    method: 'POST',
    body: JSON.stringify({id: 200})
    });
    if (response.ok){
      const jsonResponse = await response.json();
      return jsonResponse;
    } throw new Error("Request failed!")
    
    } catch(error) {
    console.log(error);
  }
}
